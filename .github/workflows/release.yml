name: 'Release'
on:
  push:
    branches:
      - master
      - next
jobs:
  build-and-test:
    name: 'Build and test project before release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Use Node.js LTS'
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
      - name: 'Cache node modules'
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: 'Install dependencies'
        run: npm ci --prefer-offline
      - name: 'Build project'
        run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist


  release:
    name: 'Release'
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
      - uses: actions/checkout@v2
      - name: 'Use Node.js LTS'
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
      - name: 'Cache node modules'
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: 'Install dependencies'
        run: npm ci --prefer-offline
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: dist
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release